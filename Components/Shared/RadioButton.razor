@typeparam TOption where TOption : Enum
<button class="relative px-4 py-2 rounded-full @(ParentGroup.SelectedOption.Equals(Option) ? "bg-neutral-700 text-white" : "bg-neutral-200")" @onclick="OnClick">
	@(Label ?? Option.StringValue())
	@if (Count > 0 && !ParentGroup.SelectedOption.Equals(Option))
	{
		<span class="absolute size-4 rounded-full text-xs top-0 right-0 bg-neutral-500 text-white">@Count</span>
	}
</button>

@code {
	[CascadingParameter] public required RadioButtonGroup<TOption> ParentGroup { get; set; }
	[Parameter] public required TOption Option { get; set; }
	[Parameter] public int Count { get; set; } = 0;
	[Parameter] public string? Label { get; set; } = null;

	private async Task OnClick()
	{
		await ParentGroup.SelectOptionAsync(Option);
	}

	protected override void OnInitialized()
	{
		if (ParentGroup == null)
		{
			throw new InvalidOperationException($"{nameof(RadioButton<TOption>)} must be used within {nameof(RadioButtonGroup<TOption>)}");
		}
	}
}