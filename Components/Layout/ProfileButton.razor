@using BookHeaven.Domain.Features.Profiles
@implements IDisposable
@if (string.IsNullOrEmpty(_profileName))
{
	return;
}
<Button OnClick="() => NavigationManager.NavigateTo(Urls.Profiles)">
	<svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="currentColor"  class="icon icon-tabler icons-tabler-filled icon-tabler-user"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 2a5 5 0 1 1 -5 5l.005 -.217a5 5 0 0 1 4.995 -4.783z" /><path d="M14 14a5 5 0 0 1 5 5v1a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-1a5 5 0 0 1 5 -5h4z" /></svg>
	@_profileName
</Button>

@code {
	[Inject] ISender Sender { get; set; } = null!;
	[Inject] AppStateService AppStateService { get; set; } = null!;
	[Inject] NavigationManager NavigationManager { get; set; } = null!;

	private string _profileName = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		AppStateService.OnProfileNameChanged += RefreshName;
		
		var getProfile = await Sender.Send(new GetProfileById.Query(AppStateService.ProfileId));
		_profileName = getProfile.Value.Name;
	}

	private void RefreshName(string name)
	{
		_profileName = name;
		InvokeAsync(StateHasChanged);
	}

	public void Dispose()
	{
		AppStateService.OnProfileNameChanged -= RefreshName;
	}

}