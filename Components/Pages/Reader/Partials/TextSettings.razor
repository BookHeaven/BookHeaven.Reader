@using BookHeaven.Domain.Features.Fonts
<div class="settings border-solid border-t-2 border-black bg-white" @onclick:stopPropagation="true">
    <label class="ms-3 text-nowrap my-auto">@Translations.FONT</label>
    <select @bind="ReaderService.ProfileSettings.SelectedFont" class="my-2 mx-4">
        <option value="">@Translations.DEFAULT</option>
        @foreach (var font in _fonts)
        {
            <option value="@font.Family">@font.Family</option>
        }
    </select>
    <TextSetting Label="@Translations.FONT_SIZE" Min="10" Max="32" @bind-Value="ReaderService.ProfileSettings.FontSize"/>
    @* <TextSetting Label="Letter Spacing" Min="0" Max="2" Increment="0.1" @bind-Value="ReaderService.ProfileSettings.LetterSpacing" /> *@
    @* <TextSetting Label="Word Spacing" Min="0" Max="5" Increment="0.25" @bind-Value="ReaderService.ProfileSettings.WordSpacing" /> *@
    <TextSetting Label="@Translations.LINE_HEIGHT" Min="-0.5" Max="1" Increment="0.1" @bind-Value="ReaderService.ProfileSettings.LineHeight"/>
    <TextSetting Label="@Translations.TEXT_INDENT" Min="0" Max="3" Increment="0.5" @bind-Value="ReaderService.ProfileSettings.TextIndent"/>
    <TextSetting Label="@Translations.PARAGRAPH_SPACING" Min="0" Max="20" Increment="2" @bind-Value="ReaderService.ProfileSettings.ParagraphSpacing"/>
</div>

@code {
    [Inject] private ReaderService ReaderService { get; set; } = null!;
    [Inject]private ISender Sender { get; set; } = null!;

    List<Font> _fonts = [];
    
    protected override async Task OnInitializedAsync()
    {
        var getVariants = await Sender.Send(new GetAllFonts.Query());
        if (getVariants.IsSuccess)
        {
            _fonts.AddRange(getVariants.Value.GroupBy(v => v.Family).Select(v => v.First()));
        }
    }
}