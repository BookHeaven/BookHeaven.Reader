@using BookHeaven.EbookManager.Entities
@implements IDisposable
@if (!OverlayService.IsTocVisible)
{   
    return;
}
<div @onclick="OverlayService.ToggleToc" class="absolute top-0 left-0 right-0 bottom-0 z-[1000]">
    <div id="spine" @onclick:stopPropagation="true" @onclick:preventDefault="true" class="w-[70%] border-solid border-r-2 z-[1001] h-full overflow-y-auto border-black bg-white">
        <div class="ms-2 text-center font-bold">@Translations.INDEX</div>
        @foreach (var chapter in Chapters)
        {
            <TableOfContentsEntry Entry="@chapter" CurrentChapterId="@CurrentChapterId" />
        }
    </div>
</div>

@code {
    [Inject] OverlayService OverlayService { get; set; } = null!;
    
    [Parameter] public IReadOnlyList<TocEntry> Chapters { get; set; } = [];
    [Parameter] public string? CurrentChapterId { get; set; }
    //[Parameter] public EventCallback<string> OnChapterSelected { get; set; }

    protected override void OnInitialized()
    {
        OverlayService.OnOverlayChanged += RefreshUi;
    }
    
    public void Dispose()
    {
        OverlayService.OnOverlayChanged -= RefreshUi;
    }
    
    private void RefreshUi()
    {
        InvokeAsync(StateHasChanged);
    }
}