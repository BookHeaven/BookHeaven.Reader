@using BookHeaven.Reader.Functions
<div class="col-span-2 flex justify-center gap-4 p-3">
    @foreach (NavigationLayoutType type in Enum.GetValues(typeof(NavigationLayoutType)))
    {
        <div class="grid grid-cols-3 grid-rows-3 w-[100px] h-[100px] hover:cursor-pointer @((ProfileSettingsService.ProfileSettings.SelectedLayout == (int)type).Then("ring ring-black"))" @onclick="@(() => ChangeLayout(type))">
            @{
                var buttons = ReaderFunctions.GetLayoutForType(type);
            }

            @for(var i = 0; i < buttons.Count; i++)
            {
                var showIcon = i is 3 or 4 or 5;
                var color = "";
                switch (buttons[i])
                {
                    case NavigationButton.Next:
                        color = "bg-neutral-300";
                        break;
                    case NavigationButton.Previous:
                        color = "bg-neutral-400";
                        break;
                    case NavigationButton.Overlay:
                        color = "bg-neutral-200";
                        break;
                }
                
                <span class="flex items-center justify-center @color">
                    @if (showIcon)
                    {
                        switch (buttons[i])
                        {
                            case NavigationButton.Next:
                                <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="1"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-chevron-right"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 6l6 6l-6 6" /></svg>
                                break;
                            case NavigationButton.Previous:
                                <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="1"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-chevron-left"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M15 6l-6 6l6 6" /></svg>
                                break;
                            case NavigationButton.Overlay:
                                <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="1"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-menu-2"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 6l16 0" /><path d="M4 12l16 0" /><path d="M4 18l16 0" /></svg>
                                break;
                                
                        }
                    }
                </span>
            }
        </div>
    }
</div>


@code {
    [Inject] private ProfileSettingsService ProfileSettingsService { get; set; } = null!;

    private void ChangeLayout(NavigationLayoutType type)
    {
        ProfileSettingsService.ProfileSettings.SelectedLayout = (int)type;
        ProfileSettingsService.OnProfileSettingsChanged?.Invoke(nameof(ProfileSettings.SelectedLayout));
    }

}