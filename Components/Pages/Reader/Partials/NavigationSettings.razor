@using BookHeaven.Reader.Functions
<div class="col-span-2 flex justify-center gap-4 p-3">
    @foreach (NavigationLayoutType type in Enum.GetValues(typeof(NavigationLayoutType)))
    {
        <div class="grid grid-cols-3 grid-rows-3 w-[100px] h-[100px] hover:cursor-pointer @((ProfileSettings.SelectedLayout == (int)type).Then("ring ring-black"))" @onclick="@(() => ChangeLayout(type))">
            @{
                var buttons = ReaderNavigation.GetLayoutForType(type);
            }

            @for(var i = 0; i < buttons.Count; i++)
            {
                var showIcon = i is 3 or 4 or 5;
                var color = "";
                var icon = "";
                switch (buttons[i])
                {
                    case NavigationButton.Next:
                        color = "bg-gray-300";
                        if (showIcon) icon = "bi-chevron-right";
                        break;
                    case NavigationButton.Previous:
                        color = "bg-gray-400";
                        if(showIcon) icon = "bi-chevron-left";
                        break;
                    case NavigationButton.Overlay:
                        color = "bg-gray-200";
                        if(showIcon) icon = "bi-list";
                        break;
                }
                
                <span class="flex items-center justify-center @color">
                    @if (showIcon)
                    {
                        <i class="bi @icon"></i>
                    }
                </span>
            }
        </div>
    }
</div>


@code {
    [Parameter]
    public ProfileSettings ProfileSettings { get; set; } = null!;

    private void ChangeLayout(NavigationLayoutType type)
    {
        ProfileSettings.SelectedLayout = (int)type;
    }

}