@using BookHeaven.Domain.Features.Profiles
@attribute [Route(Urls.Profiles)]
@layout EmptyLayout
@if (!_initialized)
{
	<Message Content="@Translations.LOADING"/>
	return;
}

<div class="w-screen h-screen flex flex-col items-center justify-center">
	<h2>Select your profile</h2>
	<div class="flex items-center flex-wrap justify-center mt-3 gap-2">
		@foreach (var profile in _profiles)
		{
			<button class="size-20 border border-black text-sm rounded" @onclick="() => SetProfile(profile.ProfileId)">
				@profile.Name
			</button>
		}
	</div>
</div>

@code {
	[Inject] private ISender Sender { get; set; } = null!;
	[Inject] private AppStateService AppStateService { get; set; } = null!;
	[Inject] private NavigationManager NavigationManager { get; set; } = null!;

	private bool _initialized = false;
	private List<Profile> _profiles = [];

	protected override async Task OnInitializedAsync()
	{
		var getProfiles = await Sender.Send(new GetAllProfiles.Query());
		if (getProfiles.IsSuccess)
		{
			_profiles = getProfiles.Value;
		}
		else
		{
			// Handle error, e.g., show a message to the user
			Console.WriteLine("Failed to load profiles: " + getProfiles.Error);
		}
		_initialized = true;
	}
	
	private void SetProfile(Guid profileId)
	{
		AppStateService.ProfileId = profileId;
		NavigationManager.NavigateTo(Urls.Books);
	}
}