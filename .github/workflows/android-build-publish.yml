name: Publish Android app

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'

permissions:
  contents: write

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      exists: ${{ steps.check-image.outputs.exists }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get version
        id: get-version
        run: |
          VERSION=$(nbgv get-version | grep NuGetPackageVersion | cut -d ':' -f2 | xargs)
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Check if tag version exists
        id: check_image
        run: |
            if git ls-remote --tags origin "v${{ steps.get-version.outputs.version }}" > /dev/null; then
              echo "exists=true" >> $GITHUB_OUTPUT
            else
              echo "exists=false" >> $GITHUB_OUTPUT
            fi
      
  build-android:
    runs-on: windows-latest
    needs: check-version
    if: needs.check-version.outputs.exists == 'false'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
          
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Setup node js
      uses: actions/setup-node@v3
      with:
        node-version: latest
        cache: 'npm'
    
    - name: Move to BookHeaven directory
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Path BookHeaven\BookHeaven.Reader -Force
        Get-ChildItem -Path . -Exclude BookHeaven | Move-Item -Destination BookHeaven\BookHeaven.Reader -Force
        
    - name: Clone EpubManager
      shell: pwsh
      run: |
        git clone https://${{ secrets.PAT_TOKEN }}@github.com/BookHeaven/BookHeaven.EpubManager.git temp\BookHeaven.EpubManager
        New-Item -ItemType Directory -Path BookHeaven\BookHeaven.EpubManager -Force
        Get-ChildItem -Path temp\BookHeaven.EpubManager | Move-Item -Destination BookHeaven\BookHeaven.EpubManager -Force
        
    - name: Clone BookHeaven.Domain
      shell: pwsh
      run: |
        git clone https://${{ secrets.PAT_TOKEN }}@github.com/BookHeaven/BookHeaven.Domain.git temp\BookHeaven.Domain
        New-Item -ItemType Directory -Path BookHeaven\BookHeaven.Domain -Force
        Get-ChildItem -Path temp\BookHeaven.Domain | Move-Item -Destination BookHeaven\BookHeaven.Domain -Force
        
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('BookHeaven/BookHeaven.Reader/**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Cache npm modules
      uses: actions/cache@v3
      with:
        path: BookHeaven/BookHeaven.Reader/node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('BookHeaven/BookHeaven.Reader/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Install npm packages
      working-directory: .\BookHeaven\BookHeaven.Reader
      run: npm ci

    - name: Build tailwindcss
      working-directory: .\BookHeaven\BookHeaven.Reader
      run: npm run tailwindcss:build
    
    - name: Restore dependencies
      working-directory: .\BookHeaven\BookHeaven.Reader
      run: dotnet restore

    - name: Setup keystore file
      id: decode_keystore
      uses: timheuer/base64-to-file@v1.2.4
      with:
        fileName: bookheaven.jks
        encodedString: ${{ secrets.KEYSTORE_BASE64 }}
    
    - name: Publish
      working-directory: .\BookHeaven
      run: |
          dotnet publish .\BookHeaven.Reader\BookHeaven.Reader.csproj -c Release -f net9.0-android /p:AndroidKeyStore=true /p:AndroidSigningKeyStore="${{ steps.decode_keystore.outputs.filePath }}" /p:AndroidSigningKeyAlias=bookheaven /p:AndroidSigningKeyPass=${{ secrets.KEYSTORE_PASSWORD }} /p:AndroidSigningStorePass=${{ secrets.KEYSTORE_PASSWORD }} --no-restore
    
    - name: Create Tag
      uses: actions/github-script@v7
      with: 
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            ref: `refs/tags/v${{ steps.extract_version.outputs.version }}`
          })
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.extract_version.outputs.version }}
        generate_release_notes: true
        make_latest: true
        files: |
            ./BookHeaven/BookHeaven.Reader/bin/Release/net9.0-android/publish/dev.ggarrido.bookheaven-Signed.apk
            ./BookHeaven/BookHeaven.Reader/bin/Release/net9.0-android/publish/dev.ggarrido.bookheaven-Signed.aab
